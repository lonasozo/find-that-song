<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Playlist Generator - Find That Song</title>
  <link rel="stylesheet" href="/css/styles.css">
  <link rel="stylesheet" href="/css/playlist-generator.css">
  <script>
    // Check for dark mode preference
    if (localStorage.getItem('theme') === 'dark' || 
        (!localStorage.getItem('theme') && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        document.documentElement.setAttribute('data-theme', 'dark');
    } else {
        document.documentElement.setAttribute('data-theme', 'light');
    }
  </script>
  <style>
    /* Custom styling for multi-select dropdown */
    select[multiple] {
      height: auto;
      min-height: 100px;
      background-image: none;
      padding: 8px;
    }
    select[multiple] option {
      padding: 8px;
      margin-bottom: 3px;
      border-radius: 4px;
      background-color: var(--dropdown-option-bg, #f0f0f0);
      color: var(--dropdown-option-text, #333);
    }
    select[multiple] option:checked {
      background-color: #1DB954;
      color: white;
    }
    .genres-hint {
      display: block;
      margin-top: 5px;
      font-size: 0.8em;
      color: var(--text-secondary, #777);
    }

    /* Audio features styling */
    .audio-features-section {
      margin-top: 25px;
      padding: 20px;
      border-radius: 10px;
      background-color: var(--card-bg, rgba(255, 255, 255, 0.05));
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      border: 1px solid var(--border-color, rgba(255, 255, 255, 0.1));
    }

    .audio-features-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 15px;
      border-bottom: 1px solid var(--border-color, rgba(255, 255, 255, 0.1));
      padding-bottom: 10px;
    }

    .audio-features-header h3 {
      margin: 0;
      color: var(--text-primary, #fff);
      font-size: 1.2rem;
    }

    .feature-sliders {
      margin-top: 15px;
    }

    .slider-group {
      margin: 20px 0;
      position: relative;
      background-color: var(--slider-bg, rgba(255, 255, 255, 0.03));
      border-radius: 8px;
      padding: 15px;
      transition: background-color 0.3s;
    }

    .slider-group:hover {
      background-color: var(--slider-hover-bg, rgba(255, 255, 255, 0.07));
    }

    .slider-group label {
      display: block;
      margin-bottom: 12px;
      font-weight: bold;
      color: var(--text-primary, #ddd);
    }

    .slider-container {
      position: relative;
      display: flex;
      align-items: center;
      gap: 15px;
    }

    .slider-group input[type="range"] {
      flex-grow: 1;
      -webkit-appearance: none;
      appearance: none;
      height: 6px;
      border-radius: 3px;
      background: var(--slider-track-bg, #444);
      outline: none;
    }

    .slider-group input[type="range"]::-webkit-slider-thumb {
      -webkit-appearance: none;
      height: 18px;
      width: 18px;
      border-radius: 50%;
      background: #1DB954;
      cursor: pointer;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }

    .slider-group input[type="range"]::-moz-range-thumb {
      height: 18px;
      width: 18px;
      border-radius: 50%;
      background: #1DB954;
      cursor: pointer;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
      border: none;
    }

    .slider-value {
      width: 50px;
      font-weight: bold;
      color: #1DB954;
      text-align: center;
      background-color: var(--slider-value-bg, rgba(29, 185, 84, 0.1));
      padding: 3px 8px;
      border-radius: 15px;
      font-size: 0.9rem;
    }

    .feature-description {
      font-size: 0.85rem;
      color: var(--text-secondary, #999);
      margin-top: 8px;
      line-height: 1.4;
      font-style: italic;
    }

    /* Theme variables */
    :root {
      --dropdown-option-bg: #f0f0f0;
      --dropdown-option-text: #333;
      --text-secondary: #777;
      --card-bg: #f9f9f9;
      --border-color: #e0e0e0;
      --text-primary: #333;
      --slider-bg: #f0f0f0;
      --slider-hover-bg: #e5e5e5;
      --slider-track-bg: #ccc;
      --slider-value-bg: rgba(29, 185, 84, 0.1);
    }

    [data-theme="dark"] {
      --dropdown-option-bg: #333;
      --dropdown-option-text: #eee;
      --text-secondary: #aaa;
      --card-bg: rgba(30, 30, 30, 0.8);
      --border-color: rgba(255, 255, 255, 0.1);
      --text-primary: #fff;
      --slider-bg: rgba(30, 30, 30, 0.5);
      --slider-hover-bg: rgba(40, 40, 40, 0.7);
      --slider-track-bg: #444;
      --slider-value-bg: rgba(29, 185, 84, 0.2);
    }

    /* Stile per il bottone randomize */
    .randomize-btn {
      background-color: rgba(29, 185, 84, 0.15);
      color: #1DB954;
      border: 1px solid #1DB954;
      border-radius: 15px;
      padding: 5px 12px;
      font-size: 0.8rem;
      cursor: pointer;
      transition: all 0.2s ease;
      display: flex;
      align-items: center;
      gap: 5px;
    }

    .randomize-btn:hover {
      background-color: rgba(29, 185, 84, 0.3);
    }

    .randomize-btn svg {
      width: 14px;
      height: 14px;
      fill: currentColor;
    }
  </style>
</head>
<body>
  <div class="generator-container">
    <header>
      <h1>Playlist Generator</h1>
    </header>

    <div class="generator-form-container">
      <div class="generate-playlist-container">
        <h1>Generate a Custom Playlist</h1>
        <p class="section-description">Create a new playlist based on your music preferences.</p>

        <form id="playlist-form" action="/create-playlist" method="post" class="playlist-form">
            <input type="hidden" name="access_token" value="<%= access_token %>">
            
            <div class="form-group">
                <label for="playlist_name">Playlist Name</label>
                <input type="text" id="playlist_name" name="playlist_name" 
                       value="<%= defaultPlaylistName %>" required class="form-control">
            </div>
            
            <div class="form-group">
                <label for="playlist_description">Description (optional)</label>
                <textarea id="playlist_description" name="playlist_description" 
                          class="form-control">Discover new music with Find That Song</textarea>
            </div>
            
            <div class="form-group">
                <label>What genres would you like in your playlist?</label>
                <div class="genre-selector">
                    <select id="genres" name="genres" multiple class="form-control">
                        <optgroup label="Popular Genres">
                            <option value="pop">Pop</option>
                            <option value="rock">Rock</option>
                            <option value="hip-hop">Hip-Hop</option>
                            <option value="r-n-b">R&B</option>
                            <option value="electronic">Electronic</option>
                            <option value="dance">Dance</option>
                            <option value="indie">Indie</option>
                        </optgroup>
                        <optgroup label="Specific Genres">
                            <option value="acoustic">Acoustic</option>
                            <option value="alternative">Alternative</option>
                            <option value="ambient">Ambient</option>
                            <option value="blues">Blues</option>
                            <option value="classical">Classical</option>
                            <option value="country">Country</option>
                            <option value="folk">Folk</option>
                            <option value="funk">Funk</option>
                            <option value="heavy-metal">Heavy Metal</option>
                            <option value="house">House</option>
                            <option value="jazz">Jazz</option>
                            <option value="piano">Piano</option>
                            <option value="punk">Punk</option>
                            <option value="reggae">Reggae</option>
                            <option value="soul">Soul</option>
                        </optgroup>
                        <optgroup label="Moods">
                            <option value="chill">Chill</option>
                            <option value="happy">Happy</option>
                            <option value="party">Party</option>
                            <option value="romance">Romance</option>
                            <option value="sad">Sad</option>
                        </optgroup>
                    </select>
                    <small class="genres-hint">Tip: Press Ctrl (Cmd on Mac) to select multiple genres (max 5)</small>
                    <small class="genres-hint">If no genres are selected, popular genres will be used.</small>
                </div>
            </div>
            
            <div class="form-group">
                <label for="track_count">Number of tracks</label>
                <input type="number" id="track_count" name="track_count" min="5" max="50" value="20" class="form-control">
            </div>
            
            <div class="form-group">
                <label>Privacy</label>
                <div class="radio-options">
                    <div class="radio-option">
                        <input type="radio" id="public_true" name="public" value="true" checked>
                        <label for="public_true">Public</label>
                    </div>
                    <div class="radio-option">
                        <input type="radio" id="public_false" name="public" value="false">
                        <label for="public_false">Private</label>
                    </div>
                </div>
            </div>


            <div class="audio-features-section" id="advanced-options">
              <div class="audio-features-header">
                <h3>Audio Features</h3>
                <div class="audio-features-controls">
                  <button type="button" id="randomize-features" class="randomize-btn">
                    <svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                      <path d="M18 4l3 3-3 3v-2c-1.85 0-3.38 1.34-3.67 3.09A7.55 7.55 0 0 0 13.5 12a7.46 7.46 0 0 0 .84-.91c.29-1.75 1.82-3.09 3.66-3.09v-2l3 3-3 3v-2c-1.34 0-2.5.88-2.9 2.1A6 6 0 0 0 19 19a1 1 0 0 1 0 2 8 8 0 0 1-7-4H8.83l2 2H10v2H5v-5h2v.83L9.07 17H8a8 8 0 0 1-7-4 1 1 0 0 1 1.73-1A6 6 0 0 0 7 15h.17L5 12.83V13H3V8h5v2h-.83L5.1 11.1A6.14 6.14 0 0 0 8 10h4c0-.34.03-.67.08-1A6 6 0 0 0 7 5a1 1 0 0 1 0-2 8 8 0 0 1 8 4h2.83l-2-2H17V3h5v5h-2v-.83L18.93 9H19a8 8 0 0 1 6 4 1 1 0 0 1-1.73 1A6 6 0 0 0 19 11h-.17L21 13.17V13h2v5h-5v-2h.83l2.07-2.1A6.14 6.14 0 0 0 17 16h-4c0 .34-.03.67-.08 1a6 6 0 0 0 5.08 4 1 1 0 0 1 0 2 8 8 0 0 1-7-4h-4.17l-2 2H4v-2l3-3 3 3v-2h1.76a7.51 7.51 0 0 0-.86-1H8a1 1 0 0 1-.14 0A6 6 0 0 0 12 19a1 1 0 0 1 0 2 8 8 0 0 1-8-8 8 8 0 0 1 8-8 1 1 0 0 1 0 2 6 6 0 0 0-6 6 5.94 5.94 0 0 0 .35 2H8.17L7 13.83V13H5v-5h5v2H8.83L7.1 11.1A6.14 6.14 0 0 0 10 13h.1c.34-1.75 1.82-3.1 3.9-3.1v-4l3 3-3 3v-2c-1.34 0-2.5.88-2.9 2.1A6 6 0 0 0 16 19a1 1 0 0 1 0 2 8 8 0 0 1-7-4H5v-2l3-3 3 3v-2h4a7.54 7.54 0 0 0-.91-.84C14.09 10.38 14 9.19 14 8v-2l3 3-3 3v-2c-1.85 0-3.38 1.34-3.67 3.09.15.29.27.59.38.9.13.38.29.75.48 1.09A4.56 4.56 0 0 1 14 13v2l-3-3 3-3v2c1.85 0 3.38-1.34 3.67-3.1-.15-.28-.27-.58-.38-.9z"/>
                    </svg>
                    Randomize Values
                  </button>
                </div>
              </div>
              <div class="feature-sliders">
                <div class="slider-group">
                  <label for="target_energy">Energy</label>
                  <div class="slider-container">
                    <input type="range" id="target_energy" name="target_energy" min="0" max="100" value="50">
                    <span class="slider-value" id="energy-value">50%</span>
                  </div>
                  <p class="feature-description">Energy represents intensity and activity. High energy tracks feel fast and loud.</p>
                </div>
                
                <div class="slider-group">
                  <label for="target_popularity">Popularity</label>
                  <div class="slider-container">
                    <input type="range" id="target_popularity" name="target_popularity" min="0" max="100" value="50">
                    <span class="slider-value" id="popularity-value">50%</span>
                  </div>
                  <p class="feature-description">Popularity indicates how well-known a track is. Higher values mean more popular songs.</p>
                </div>
                
                <div class="slider-group">
                  <label for="target_acousticness">Acousticness</label>
                  <div class="slider-container">
                    <input type="range" id="target_acousticness" name="target_acousticness" min="0" max="100" value="50">
                    <span class="slider-value" id="acousticness-value">50%</span>
                  </div>
                  <p class="feature-description">Acousticness represents how acoustic a track is. Higher values mean more acoustic instruments.</p>
                </div>
              </div>
            </div>
            
            <div class="form-actions">
                <button type="submit" class="btn btn-primary">Create Playlist</button>
            </div>
        </form>
    </div>

    <div id="loading-spinner" style="display: none; text-align: center; margin-top: 20px;">
        <div class="spinner"></div>
        <p>Creating your playlist...</p>
    </div>

    <div id="result"></div>
  </div>
</div>

<script src="/js/playlist-generator.js"></script>

<script>
    // Additional script to make form handling better
    document.addEventListener('DOMContentLoaded', function() {
        // Enhanced genre selector functionality
        const genreSelect = document.getElementById('genres');
        
        // Function to limit genre selections to 5
        if (genreSelect) {
            genreSelect.addEventListener('change', function() {
                const selectedOptions = Array.from(this.selectedOptions);
                if (selectedOptions.length > 5) {
                    alert('You can select a maximum of 5 genres.');
                    // Deselect the last option
                    selectedOptions[selectedOptions.length - 1].selected = false;
                }
            });
        }

        // Funzione per generare un numero casuale tra min e max inclusi
        function getRandomValue(min, max) {
            return Math.floor(Math.random() * (max - min + 1)) + min;
        }
        
        // Imposta valori casuali per gli slider al caricamento della pagina
        function setRandomSliderValues() {
            const sliders = [
                { slider: 'target_energy', value: getRandomValue(0, 100) },
                { slider: 'target_popularity', value: getRandomValue(0, 100) },
                { slider: 'target_acousticness', value: getRandomValue(0, 100) }
            ];
            
            sliders.forEach(({slider, value}) => {
                const sliderElement = document.getElementById(slider);
                const valueDisplay = document.getElementById(slider.replace('target_', '') + '-value');
                
                sliderElement.value = value;
                valueDisplay.textContent = `${value}%`;
            });
        }
        
        // Esegui l'impostazione dei valori casuali al caricamento
        setRandomSliderValues();
        
        // Set up slider value displays
        function setupSlider(sliderId, valueId) {
          const slider = document.getElementById(sliderId);
          const valueDisplay = document.getElementById(valueId);
          
          // Aggiungiamo l'event listener per l'evento 'input'
          slider.addEventListener('input', function() {
            valueDisplay.textContent = `${this.value}%`;
          });
        }
        
        // Chiamiamo la funzione setupSlider per ogni slider
        setupSlider('target_energy', 'energy-value');
        setupSlider('target_popularity', 'popularity-value');
        setupSlider('target_acousticness', 'acousticness-value');

        // Collegamento del pulsante randomize
        const randomizeBtn = document.getElementById('randomize-features');
        if (randomizeBtn) {
            randomizeBtn.addEventListener('click', setRandomSliderValues);
        }
        
        // Set up slider value displays - correzione per aggiornare i valori
        const sliders = document.querySelectorAll('input[type="range"]');
        sliders.forEach(slider => {
            const valueId = slider.id.replace('target_', '') + '-value';
            const valueDisplay = document.getElementById(valueId);
            
            if (valueDisplay) {
                // Aggiungiamo eventi sia per input (durante il trascinamento) che per change (al rilascio)
                slider.addEventListener('input', function() {
                    valueDisplay.textContent = `${this.value}%`;
                });
                
                slider.addEventListener('change', function() {
                    valueDisplay.textContent = `${this.value}%`;
                });
            }
        });
    });
</script>

<style>
  /* ...existing styles... */

  /* Rimuoviamo gli stili per il toggle che non è più necessario */
  .advanced-options-toggle {
    display: none;
  }

  #toggle-advanced {
    display: none;
  }

  /* Modifichiamo la classe per mostrare sempre le opzioni avanzate */
  .advanced-options {
    max-height: none; /* Rimuoviamo la limitazione di altezza */
    overflow: visible; /* Rendiamo visibile il contenuto */
    padding: 20px;
    margin-bottom: 20px;
    border-radius: 8px;
    background-color: rgba(255, 255, 255, 0.05);
  }

  /* Questa classe non è più necessaria ma la lasciamo per compatibilità */
  .advanced-options.visible {
    max-height: none;
    padding: 20px;
  }

  /* ...existing styles for sliders... */
</style>

</body></html>