<!DOCTYPE html>
<html>
  <head>
    <title>Find That Song</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta charset="UTF-8">
  </head>
  <body>
    <div class="container">
      <div class="content">
        <h1>Find That Song</h1>
        <p>Discover your music listening habits and create personalized playlists</p>
        <a href="/login" class="login-button" id="login-button">
          <span class="button-text">Enter with Spotify</span>
          <span class="spinner"></span>
        </a>
        
        <div class="login-container">
          <div class="access-info">
            <p class="access-note">
              This application requires manual approval in Spotify's Developer Dashboard. 
              If you want to try it out, please click the button below to request access.
            </p>
            
            <a href="https://form.typeform.com/to/dXMB3c6F" class="access-button" target="_blank">
              Request Access
            </a>
          </div>
        </div>
      </div>
    </div>

    <footer class="github-footer">
      <a href="<%= githubUrl %>" target="_blank" class="github-link" title="View source code on GitHub">
        <svg class="github-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
          <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z" fill="#FFFFFF"/>
        </svg>
      </a>
    </footer>

    <style>
      body, html {
        margin: 0;
        padding: 0;
        height: 100%;
        width: 100%;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
        background-color: #121212;
        color: #ffffff;
        overflow: hidden;
      }
      
      .container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        width: 100%;
      }
      
      .content {
        text-align: center;
        max-width: 600px;
        padding: 20px;
      }
      
      h1 {
        font-size: 3rem;
        margin-bottom: 20px;
        color: #1DB954; /* Spotify green */
      }
      
      p {
        font-size: 1.2rem;
        margin-bottom: 40px;
        color: #b3b3b3;
      }
      
      .login-button {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        background-color: #1DB954; /* Spotify green */
        color: white;
        padding: 15px 30px;
        border-radius: 50px;
        text-decoration: none;
        font-weight: bold;
        font-size: 1.1rem;
        transition: background-color 0.3s ease;
        position: relative;
        min-width: 200px;
      }
      
      .login-button:hover {
        background-color: #1ed760; /* Slightly lighter green on hover */
      }
      
      .login-button.loading {
        background-color: #18a449; /* Darker green when loading */
        cursor: default;
      }
      
      .spinner {
        display: none;
        width: 20px;
        height: 20px;
        border: 3px solid rgba(255, 255, 255, 0.3);
        border-radius: 50%;
        border-top-color: #fff;
        animation: spin 1s ease-in-out infinite;
        margin-left: 10px;
      }
      
      @keyframes spin {
        to { transform: rotate(360deg); }
      }
      
      .login-button.loading .spinner {
        display: inline-block;
      }
      
      .access-info {
        margin-top: 30px;
        padding: 20px;
        background-color: rgba(255, 255, 255, 0.1);
        border-radius: 8px;
        text-align: center;
        max-width: 500px;
      }
      
      .access-note {
        color: #eee;
        font-size: 16px;
        line-height: 1.5;
        margin-bottom: 20px;
      }
      
      .access-button {
        display: inline-block;
        padding: 12px 24px;
        background-color: #1DB954;
        color: white;
        border-radius: 30px;
        text-decoration: none;
        font-weight: bold;
        transition: background-color 0.3s ease;
      }
      
      .access-button:hover {
        background-color: #1ed760;
      }

      .github-footer {
        position: fixed;
        bottom: 20px;
        width: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
      }
      
      .github-link {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 40px;
        height: 40px;
        background-color: rgba(30, 30, 30, 0.7);
        border-radius: 50%;
        transition: all 0.3s ease;
      }
      
      .github-link:hover {
        background-color: #333;
        transform: scale(1.1);
      }
      
      .github-icon {
        width: 24px;
        height: 24px;
        opacity: 0.8;
        transition: opacity 0.3s ease;
      }
      
      .github-link:hover .github-icon {
        opacity: 1;
      }
    </style>
    
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const loginButton = document.getElementById('login-button');
        
        loginButton.addEventListener('click', function(e) {
          // Don't prevent default - let the normal redirect happen
          
          // Add loading state to button
          this.classList.add('loading');
          
          // Change the text
          const buttonText = this.querySelector('.button-text');
          buttonText.textContent = 'Connecting...';
        });
      });
    </script>
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        // Track homepage view with additional details
        if (window.customAnalytics) {
            window.customAnalytics.trackEvent('homepage_view', {
                timestamp: new Date().toISOString(),
                referrer: document.referrer || 'direct',
                language: navigator.language
            });
            
            // Track login button clicks
            const loginButton = document.querySelector('.login-button') || document.querySelector('a[href*="login"]');
            if (loginButton) {
                loginButton.addEventListener('click', function() {
                    window.customAnalytics.trackEvent('login_attempt', {
                        from: 'homepage'
                    });
                });
            }
            
            // Track other important homepage interactions
            document.querySelectorAll('a, button').forEach(element => {
                element.addEventListener('click', function(e) {
                    const text = this.textContent.trim();
                    const href = this.getAttribute('href') || '';
                    window.customAnalytics.trackInteraction(
                        this.tagName.toLowerCase(),
                        'click',
                        text || href
                    );
                });
            });
        }
    });
</script>
  </body>
</html>
